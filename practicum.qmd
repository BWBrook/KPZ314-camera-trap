---
title: "KPZ314 Camera-trap Practical"
format: html
execute:
  echo: true
---

```{r setup, include=FALSE}
library(targets)
tar_config_set(script = "_targets.R")

# auto‑build if the cache is empty
if (!tar_exist_objects(names = "raw")) {
  message("Building targets (~3‑5 min on fresh clone)…")
  tar_make()
}

raw            <- tar_read(raw)
site           <- tar_read(site)
taxa           <- tar_read(taxa)
alpha          <- tar_read(alpha)
comm           <- tar_read(comm)
beta_bc        <- tar_read(beta_bc)
fig_heat       <- tar_read(fig_heat)
fig_nmds       <- tar_read(fig_nmds)
gamma_all      <- tar_read(gamma_all)
gamma_region   <- tar_read(gamma_region)
rare_region    <- tar_read(rare_region)
rare_raw       <- tar_read(rare_raw)
beta_permanova <- tar_read(beta_permanova)
fig_sp_trends  <- tar_read(fig_sp_trends)
```

## 1. Orientation

**Look at the raw, expert‑checked data table.**

```{r}
dplyr::glimpse(raw)
```

> **TASK 1.1** In ≤ 30 words, explain what `expert_updated` encodes in this dataset.

---

## 2. Why “independent events”?

**Explore time gaps between events at each site.**

```{r}
library(ggplot2)

raw |>
  dplyr::group_by(camera_site) |>
  dplyr::arrange(timestamp, .by_group = TRUE) |>
  dplyr::mutate(
    delta = as.numeric(difftime(timestamp, dplyr::lag(timestamp), units = "mins"))
  ) |>
  ggplot(aes(x = delta)) +
  geom_histogram(bins = 60, na.rm = TRUE) +
  labs(
    x = "Minutes between consecutive detections",
    y = "Frequency"
  )
```

> **TASK 2.1** Why is a 5‑minute threshold for “independent events” a sensible or not sensible choice for this fauna? (≤ 40 words)

---

## 3. Site‑level diversity

**Inspect alpha‑diversity metrics for all sites.**

```{r}
alpha_long <- tidyr::pivot_longer(alpha, -camera_site,
                                  names_to = "metric",
                                  values_to = "value")

ggplot(alpha_long, aes(x = metric, y = value)) +
  geom_boxplot()
```

> **TASK 3.1** Choose one site whose Shannon index is notably high or low. State an ecological hypothesis to explain the pattern (≤ 40 words).

### 3.2  Total (γ) diversity

```{r}
gamma_all     # prints scalar
gamma_region  # prints tibble
```
> **TASK 3.2** How much of the γ diversity is captured in wet vs dry sites? (≤ 30 words)

### 3.3  Sampling sufficiency

```{r}
rare_raw
```

> **TASK 3.3.1** Are some of the camera sites undersampled? (≤ 30 words)

```{r}
rare_region
```

> **TASK 3.3.2** Do the wet and dry curves suggest similar sampling completeness across habitats? Explain in ≤ 40 words.

---

## 4. Community turnover

### 4.1  Visualise site compositional turnover and community structure.

```{r}
fig_heat
```

```{r}
plotly::ggplotly(fig_nmds)
```

> **TASK 4.1** Name two clusters of sites that appear compositionally similar. Suggest one abiotic driver that could explain the pattern (≤ 40 words).

### 4.2  Are wet vs dry communities distinct?

```{r}
beta_permanova
```

> **TASK 4.2** Interpret the pseudo-F and p-value (≤ 40 words).

### 4.3  Species spotlight

```{r}
fig_sp_trends
```

> **TASK 4.3** Which habitat records more possum events? Suggest one ecological driver (≤ 40 words).

---

## 5. Trait exploration (stretch goal)

**Link alpha metrics to species traits (from the taxa table).**

```{r}
# Example join; adapt if your key differs
alpha |> dplyr::left_join(site, by = "camera_site")
```

> **TASK 5.1** If larger‑bodied taxa are more detectable, what pattern would you expect in the alpha metrics? Test it with a quick plot or summary, and comment (≤ 50 words).

---

## 6. Reflection

> **TASK 6.1** In ≤ 50 words, reflect on one limitation or source of bias in using camera‑trap data for community‑level inference in Tasmanian fauna.

---

## 7. Free Exploration

You can load any pipeline object into your R environment and explore it.

**For example:**

```{r}
# Assign the 'alpha' site diversity table to your workspace
alpha_local <- tar_read(alpha)

# view the whole table in RStudio
alpha_local
```

**Try these ideas:**

* **Compare any two objects**
  e.g. plot Chao1 vs. Shannon diversity for all sites

  ```{r}
  alpha_tbl <- tar_read(alpha)
  plot(alpha_tbl$chao1, alpha_tbl$shannon,
       xlab = "Chao1", ylab = "Shannon", pch = 16)
  ```

* **Investigate site metadata**

  ```{r}
  site_tbl <- tar_read(site)
  summary(site_tbl$elevation_m)
  ```

* **Make a custom plot**

  ```{r}
  library(ggplot2)
  taxa_tbl <- tar_read(taxa)
  ggplot(taxa_tbl, aes(x = status, fill = status)) +
    geom_bar(show.legend = FALSE) +
    labs(title = "Taxon status in Tasmanian fauna",
        x = "Status", y = "Frequency") +
    theme_minimal()
  ```

> **TASK 7.1** Are native or introduced taxa more common in this camera-trap dataset? What does this suggest about Tasmania’s fauna?

* **Re-run a helper function yourself**

  Try feeding a subset of data to `calc_alpha()` or `build_comm_matrix()`.

  ```{r}
  # For interactive use of helpers:
  library(dplyr)
  library(tidyr)
  source("R/helpers_metrics.R")

  joined <- tar_read(joined)
  custom <- joined[joined$region == "dry", ]
  calc_alpha(custom)
  ```

**Or try anything else**: every object from the workflow is just a data frame or matrix you can inspect, plot, or save!

---

> **Bonus:** In the R console, run `tar_manifest()` to see all available pipeline objects, or use `ls()` to see what’s loaded into your workspace.

---

## 8. Your Own Analysis

Write a short script or chunk below where you try something new with the data—anything goes!

```{r}

# Your code here!

```

---

## 9. “In-console” play

After knitting, you can open the R console, load the project, and call `tar_read()` for any target, or `source("R/helpers_metrics.R")` to get all helpers.

For truly unchained analysis: create an `explore.R` or `scratch.Rmd` and go free-form!
